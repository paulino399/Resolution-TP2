CCS PCH C Compiler, Version 5.059, 5967               25-oct.-23 11:13

               Filename:   C:\Users\pj517\Desktop\PRIMEIRO ANO GEII\II ANO\S3\Informatica\Resolução\Resolution TP2\TP3\01\03\exercice_3_TP3.lst

               ROM used:   274 bytes (1%)
                           Largest free fragment is 32494
               RAM used:   5 (0%) at main() level
                           7 (0%) worst case
               Stack used: 0 locations
               Stack size: 31

*
0000:  GOTO   00E8
.................... /////////////////////////////////////////////////////////////////////////////// 
.................... //On désire toujours allumer les leds 1, 3, 4 et 6 sur la carte 8 LEDS par  
.................... //l'intermédiaire d'un bus I2C et le composantPCF8574.MAIS on vous demande de  
.................... //créer une fonction « output_portF(...) » qui permet d'envoyer un octet sur le  
.................... //port de 8 bits créé par l'intermédiaire du circuit PCF8574. 
.................... /////////////////////////////////////////////////////////////////////////////// 
....................  
.................... #include <18f4520.h> 
.................... //////////// Standard Header file for the PIC18F4520 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4520 
....................  
.................... #list 
....................  
.................... #use delay(crystal=20MHz) 
*
00C0:  CLRF   FEA
00C2:  MOVLW  05
00C4:  MOVWF  FE9
00C6:  MOVF   FEF,W
00C8:  BZ    00E4
00CA:  MOVLW  06
00CC:  MOVWF  01
00CE:  CLRF   00
00D0:  DECFSZ 00,F
00D2:  BRA    00D0
00D4:  DECFSZ 01,F
00D6:  BRA    00CE
00D8:  MOVLW  7B
00DA:  MOVWF  00
00DC:  DECFSZ 00,F
00DE:  BRA    00DC
00E0:  DECFSZ FEF,F
00E2:  BRA    00CA
00E4:  GOTO   010E (RETURN)
.................... #use i2c(master, sda=PIN_C3, scl=PIN_C4) 
*
0004:  MOVLW  08
0006:  MOVWF  01
0008:  MOVLW  05
000A:  MOVWF  00
000C:  DECFSZ 00,F
000E:  BRA    000C
0010:  BCF    F8B.4
0012:  BCF    F94.4
0014:  MOVLW  06
0016:  MOVWF  00
0018:  DECFSZ 00,F
001A:  BRA    0018
001C:  RLCF   06,F
001E:  BCF    F8B.3
0020:  BTFSC  FD8.0
0022:  BSF    F94.3
0024:  BTFSS  FD8.0
0026:  BCF    F94.3
0028:  BSF    F94.4
002A:  BTFSS  F82.4
002C:  BRA    002A
002E:  DECFSZ 01,F
0030:  BRA    0008
0032:  MOVLW  05
0034:  MOVWF  00
0036:  DECFSZ 00,F
0038:  BRA    0036
003A:  BCF    F8B.4
003C:  BCF    F94.4
003E:  NOP   
0040:  BSF    F94.3
0042:  MOVLW  06
0044:  MOVWF  00
0046:  DECFSZ 00,F
0048:  BRA    0046
004A:  MOVLW  06
004C:  MOVWF  00
004E:  DECFSZ 00,F
0050:  BRA    004E
0052:  BSF    F94.4
0054:  BTFSS  F82.4
0056:  BRA    0054
0058:  CLRF   01
005A:  MOVLW  06
005C:  MOVWF  00
005E:  DECFSZ 00,F
0060:  BRA    005E
0062:  BTFSC  F82.3
0064:  BSF    01.0
0066:  BCF    F8B.4
0068:  BCF    F94.4
006A:  BCF    F8B.3
006C:  BCF    F94.3
006E:  GOTO   009C (RETURN)
....................  
.................... unsigned int8 DATA; 
....................  
.................... // Fonction pour envoyer un octet au PCF8574 
.................... void output_portF(unsigned int8 data) { 
....................     i2c_start(); 
0072:  BSF    F94.3
0074:  MOVLW  05
0076:  MOVWF  00
0078:  DECFSZ 00,F
007A:  BRA    0078
007C:  BSF    F94.4
007E:  MOVLW  06
0080:  MOVWF  00
0082:  DECFSZ 00,F
0084:  BRA    0082
0086:  BCF    F8B.3
0088:  BCF    F94.3
008A:  MOVLW  05
008C:  MOVWF  00
008E:  DECFSZ 00,F
0090:  BRA    008E
0092:  BCF    F8B.4
0094:  BCF    F94.4
....................     i2c_write(0b01000000); // Adresse du PCF8574 en mode écriture 
0096:  MOVLW  40
0098:  MOVWF  06
009A:  BRA    0004
....................     //i2c_write(data);       // Envoi de l'octet de données 
....................     i2c_stop(); 
009C:  BCF    F94.3
009E:  NOP   
00A0:  BSF    F94.4
00A2:  BTFSS  F82.4
00A4:  BRA    00A2
00A6:  MOVLW  05
00A8:  MOVWF  00
00AA:  DECFSZ 00,F
00AC:  BRA    00AA
00AE:  BRA    00B0
00B0:  NOP   
00B2:  BSF    F94.3
00B4:  MOVLW  05
00B6:  MOVWF  00
00B8:  DECFSZ 00,F
00BA:  BRA    00B8
00BC:  GOTO   0108 (RETURN)
.................... } 
....................  
.................... void main() { 
*
00E8:  CLRF   FF8
00EA:  BCF    FD0.7
00EC:  MOVF   FC1,W
00EE:  ANDLW  C0
00F0:  IORLW  0F
00F2:  MOVWF  FC1
00F4:  MOVLW  07
00F6:  MOVWF  FB4
....................     output_float(PIN_C3); 
00F8:  BSF    F94.3
....................     output_float(PIN_C4); 
00FA:  BSF    F94.4
....................    // DATA0 = 90; // en decimal 
....................  
....................     while (true) { 
....................         // Appel de la fonction pour envoyer l'octet vers le PCF8574 
....................          
....................         DATA= input_b(); 
00FC:  SETF   F93
00FE:  MOVFF  F81,04
....................         output_portF(DATA); // Configuration pour allumer les LEDs 1, 3, 4 et 6 
0102:  MOVFF  04,05
0106:  BRA    0072
....................         delay_ms(10); 
0108:  MOVLW  0A
010A:  MOVWF  05
010C:  BRA    00C0
010E:  BRA    00FC
....................     } 
.................... } 
....................  
0110:  SLEEP 

Configuration Fuses:
   Word  1: C200   HS FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV21 NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
