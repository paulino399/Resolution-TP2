CCS PCH C Compiler, Version 5.059, 5967               20-oct.-23 09:23

               Filename:   C:\Users\pj517\Desktop\PRIMEIRO ANO GEII\II ANO\S3\Informatica\Resolução\Resolution TP2\05\exercice05.lst

               ROM used:   300 bytes (1%)
                           Largest free fragment is 32464
               RAM used:   28 (2%) at main() level
                           30 (2%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   00FE
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  F9D.5
0056:  GOTO   0060
005A:  BTFSC  F9E.5
005C:  GOTO   00D4
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... //////////////////////////////////////////////////////////////////////////////// 
.................... //On désire émettre d'une 1ère carte PIC un mot de 8 bits généré à l'aide d'une 
.................... //carte avec 8 interrupteurs ET de recevoir sur une 2ème carte PIC ce mot de  
.................... //8 bits qui sera visualisé à l'aide d'une carte avec 8 leds. 
.................... //On désire transmettre ce mot au format de 8 bits en liaison série de type  
.................... //RS232 de niveau TTL à 9600 bauds sans bit de parité et un bit de stop. 
.................... //////////////////////////////////////////////////////////////////////////////// 
.................... // Réception d'une trame série de type RS232 avec l'UART(AVEC interruption) 
.................... // Entrée : PortC : RX=RC7 (pour info TX=RC6) 
.................... // Sortie : PortD avec 8 leds 
.................... #include <18f4520.h> 
.................... //////////// Standard Header file for the PIC18F4520 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4520 
....................  
.................... #list 
....................  
.................... #use delay (crystal=8MHz) 
00AE:  CLRF   FEA
00B0:  MOVLW  1D
00B2:  MOVWF  FE9
00B4:  MOVF   FEF,W
00B6:  BZ    00D2
00B8:  MOVLW  02
00BA:  MOVWF  01
00BC:  CLRF   00
00BE:  DECFSZ 00,F
00C0:  BRA    00BE
00C2:  DECFSZ 01,F
00C4:  BRA    00BC
00C6:  MOVLW  97
00C8:  MOVWF  00
00CA:  DECFSZ 00,F
00CC:  BRA    00CA
00CE:  DECFSZ FEF,F
00D0:  BRA    00B8
00D2:  RETURN 0
.................... #use rs232(baud=9600, PARITY=N, BITS=8, STOP=1, xmit=PIN_C6, rcv=PIN_C7) 
.................... // Déclaration des variables 
.................... unsigned int16 TEMPO; // variable TEMPO en 16 bits 
.................... unsigned int8 DATA; // variable DATA en 8 bits 
.................... /////////////////////////////// INTERRUPTIONS ///////////////////////////////////////// 
.................... // Interruption pour lire le buffer de l'UART (réception faite) 
.................... #INT_RDA // Interruption => Une donnée a été reçue 
.................... VOID RX_DATA (VOID) 
.................... { 
....................  IF(kbhit()) // Test si le buffer (tampon) est plein 
00D4:  BTFSS  F9E.5
00D6:  BRA    00F8
.................... {  
....................  
....................  printf("%c",DATA);//envoi du contenu de DATA (en code ASCII) sur Tx en RS232 
00D8:  MOVF   1B,W
00DA:  BTFSS  F9E.4
00DC:  BRA    00DA
00DE:  MOVWF  FAD
.................... delay_ms(TEMPO); 
00E0:  MOVFF  1A,1C
00E4:  INCF   1C,F
00E6:  DECF   1C,F
00E8:  BTFSC  FD8.2
00EA:  BRA    00F2
00EC:  SETF   1D
00EE:  RCALL  00AE
00F0:  BRA    00E6
00F2:  MOVFF  19,1D
00F6:  RCALL  00AE
....................  } 
00F8:  BCF    F9E.5
00FA:  GOTO   0060
.................... } 
.................... // PROGRAMME PRINCIPAL 
.................... void main() 
00FE:  CLRF   FF8
0100:  BCF    FD0.7
0102:  BSF    07.7
0104:  BCF    FB8.3
0106:  MOVLW  0C
0108:  MOVWF  FAF
010A:  MOVLW  A2
010C:  MOVWF  FAC
010E:  MOVLW  90
0110:  MOVWF  FAB
0112:  NOP   
0114:  NOP   
0116:  MOVF   FC1,W
0118:  ANDLW  C0
011A:  IORLW  0F
011C:  MOVWF  FC1
011E:  MOVLW  07
0120:  MOVWF  FB4
.................... { 
....................  DATA=0x95;//0b10010101 Mot binaire à transmettre; 
0122:  MOVLW  95
0124:  MOVWF  1B
.................... enable_interrupts(GLOBAL); // Activation des interruptions globales 
0126:  MOVLW  C0
0128:  IORWF  FF2,F
.................... enable_interrupts(INT_RDA); // Activation de l'interruption de réception de donnée UART 
012A:  BSF    F9D.5
....................   
....................  while(TRUE) 
....................  { 
012C:  BRA    012C
....................   
....................   } 
.................... } 
012E:  SLEEP 

Configuration Fuses:
   Word  1: C200   HS FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV21 NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
